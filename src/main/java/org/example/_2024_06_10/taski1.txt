Задание

Часть 1:
Создайте класс Student, который имеет следующие поля:

id (типа int) - уникальный идентификатор студента.
firstName (типа String) - имя студента.
lastName (типа String) - фамилия студента.
email (типа String) - электронная почта студента.
grade (типа double) - средний балл студента.
major (типа Enum) - специальность студента.
year (типа int) - курс обучения студента.
fullTime (типа boolean) - статус обучения студента (очно/заочно).
Должны быть реализованы конструктор для инициализации всех полей, геттеры и сеттеры для каждого поля.

Часть 2:
Создайте класс StudentRegistry,
который будет содержать Map<Integer, Student>, где ключ - это id студента.
Реализуйте в этом классе следующие методы для обработки данных с использованием Stream API:

addStudent(Student student) - добавляет студента в реестр.
removeStudent(int id) - удаляет студента по идентификатору.
findStudentsByMajor(String major) - возвращает список студентов, обучающихся на указанной специальности.
calculateAverageGrade() - вычисляет средний балл среди всех студентов.
listStudentsByYear(int year) - возвращает список студентов, обучающихся на указанном курсе.

getStudent(int id) - возвращает студента по его идентификатору.
getTotalNumberOfStudents() - возвращает общее количество студентов.
getStudentsWithGradeAbove(double grade) - возвращает список студентов, чей средний балл выше указанного.
getAverageGradeByMajor(String major) - вычисляет средний балл среди студентов определенной специальности.
isStudentPresent(String email) - проверяет, существует ли студент с заданным email в реестре.