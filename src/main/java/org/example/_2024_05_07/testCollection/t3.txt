Задание 1: Введение в наследование
Тема: Создание базового и производного классов.
Описание: Создайте базовый класс Person с полями имя,
фамилия и возраст. От него должен наследоваться класс Student,
который добавляет поле studentID. Реализуйте геттеры и сеттеры для всех полей.
В main создайте экземпляры Person и Student, установите значения их полей и выведите информацию о каждом объекте.

Результат в main:

Создание объекта Person.
Создание объекта Student.
Вывод информации об объектах с помощью System.out.println().
Задание 2: Реализация и использование интерфейсов
Тема: Интерфейсы и полиморфизм.
Описание: Создайте интерфейс Identifiable с методом getIdentity().
Реализуйте этот интерфейс в классе Student, где getIdentity() возвращает
информацию о студенте в формате: ID, имя, фамилия. В main, создайте объект
Student, вызовите getIdentity() и выведите результат.

Результат в main:

Вывод строки с идентификационной информацией студента.
Задание 3: Полиморфизм и динамическое связывание
Тема: Полиморфное использование методов.
Описание: Добавьте в класс Person и Student переопределенный метод
describe(), который возвращает строку с описанием объекта.
В main создайте массив типа Person, включающий объекты Person и Student.
Итерируйте массив и вызовите метод describe() для каждого элемента, результаты
выведите на экран.
Результат в main:

Вывод описаний для объектов типа Person и Student.

Задание 4: Расширенное использование наследования
Тема: Множественное наследование с использованием интерфейсов.
Описание: Создайте дополнительный интерфейс CommunityMember с
методом getCommunityStatus(), который возвращает статус участника
(например, "активный"). Класс Student должен реализовать оба интерфейса
(Identifiable и CommunityMember). В main, демонстрируйте использование методов
обоих интерфейсов на объекте Student.

Результат в main:

Вывод идентификационной информации и статуса участия в сообществе.

Задание 5: Интеграция всех концепций
Тема: Комплексное применение наследования, интерфейсов и полиморфизма.
Описание: Создайте класс Teacher, наследующийся от Person и реализующий
интерфейс CommunityMember. Добавьте уникальные поля и методы, отличающие его от
Student. В main, создайте и используйте массив Person, содержащий Student и
Teacher, демонстрируя полиморфизм и динамическое связывание методов.

Результат в main:

Вывод информации и статуса для Student и Teacher.