XML (eXtensible Markup Language — расширяемый язык разметки)
— это язык программирования для создания логической
структуры данных, их хранения и передачи в виде, удобном и для
компьютера, и для человека

XML — используется в SOAP (всегда) и REST-запросах (реже);

SOAP (Simple Object Access Protocol) - это протокол обмена
структурированными сообщениями в веб-службах (web services).
Он определяет стандартный формат сообщений и
правила обмена данными между клиентом и сервером.

SOAP основан на использовании XML для представления данных в сообщениях.
Сообщения SOAP состоят из заголовка (header) и тела (body).
В заголовке могут содержаться метаданные и информация о безопасности,
а тело содержит собственно данные, которые передаются между клиентом и
сервером.

REST (Representational State Transfer) - это архитектурный стиль
для построения распределенных систем, основанный на использовании
протокола HTTP. REST определяет набор принципов и ограничений,
которые позволяют создавать гибкие и масштабируемые веб-сервисы.


Основные компоненты XML:

Теги (Tags): Теги являются основными элементами XML и
используются для определения начала и конца элемента.
Они заключены в угловые скобки < и >. Например: <book>...</book>.
Теги могут быть вложенными, создавая иерархию элементов.

Элементы (Elements): Элементы представляют данные, содержимое между
начальным и конечным тегами. Например: <title>Harry Potter</title>.
Элементы могут содержать текст, другие элементы или комбинацию обоих.

Атрибуты (Attributes): Атрибуты предоставляют дополнительную информацию
об элементе. Они указываются в начальном теге элемента
в виде имя="значение". Например: <book id="123">...</book>.

Корневой элемент (Root Element): Корневой элемент является верхним
уровнем иерархии в XML-документе. Все другие элементы должны быть
вложены в корневой элемент.

Пространство имен (Namespace): Пространства имен используются для
идентификации уникальных имен элементов и предотвращения конфликтов имен.
Пространства имен указываются с помощью префикса перед именем элемента
или атрибута. Например: <ns:book>...</ns:book>.

Пример XML-документа:

xml
Copy code
<catalog>
  <book id="1">
    <title>Harry Potter</title>
    <author>J.K. Rowling</author>
    <year>2005</year>
  </book>
  <book id="2">
    <title>The Lord of the Rings</title>
    <author>J.R.R. Tolkien</author>
    <year>1954</year>
  </book>
</catalog>
XML-документы могут быть использованы для представления различных типов данных, таких как конфигурационные файлы, структурированные данные, обмен информацией между системами и т.д. XML также поддерживает возможность определения пользовательских схем (XML Schema) для ограничения и валидации структуры и содержимого данных.

XML является расширяемым и может быть адаптирован под конкретные требования и схемы данных.